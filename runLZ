# This code is part of the DCC 2013 paper: Practical Parallel Lempel-Ziv
# Factorization
# Copyright (c) 2012 Julian Shun, Fuyao Zhao
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights (to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#!/usr/bin/python
#
# run all tests
#

import os
import sys
import signal
import time
import subprocess

os.system("make clean;unset CILK;unset CILKP;make;")

def signal_handler(signal,frame):
  print "bye\n"
  sys.exit(0)
signal.signal(signal.SIGINT,signal_handler)

def shellGetOutput(str) :
  process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
  output, err = process.communicate()

  if (len(err) > 0):
      raise NameError(str+"\n"+output+err)
  return output

#testfiles = []
testfiles = ["10Midentical","10Mrandom","10Msqrtn","chr22.dna","etext99","howto.txt","jdk13c","rctail96","rfc","sprot34.dat","thesaurus.doc","w3c2","wikisamp.xml","wikisamp9.xml"]
#testfiles = ["wikisamp9.xml"]
#testfiles = ["proteins","english"]
#testfiles = ["proteins"]
testfiles = ["pitches","proteins.200MB","sources"]

apps = ["lz77_1","lz77_2","lz77_3"]

for app in apps:
  for testfile in testfiles :
    ss = "./"+app+" -i testData/"+testfile
    print app + " " + testfile
    print shellGetOutput(ss)
    sys.stdout.flush()
